extend type Query {
  users: [User]
  userById(id: Int!): User
  usersByIds(ids: [Int!]!): [User]
}

extend type Mutation {
  signIn(email: String!, password: String!): AuthInfo!
  signUp(email: String!, password: String!, name: String!): AuthInfo!
  verify(token: String!): String!
  requestResetPassword(email: String!): Boolean!
  resetPassword(password: String!, token: String!): Boolean!
}

type User { # Public info about user
  id: Int!
  name: String!
  email: String!
  event_types: [EventType!]!

  location_id: Int!

  location: Location
}

type AuthUser { # Private info about user (e.g. with email address, ...)
  id: Int!
  name: String!
  email: String!
  password: String!
  verified: Boolean!
  event_types: [EventType!]!

  location_id: Int!

  location: Location
}

type AuthInfo {
  user: AuthUser!
  token: String!
}

