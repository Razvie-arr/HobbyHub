type AuthInfo {
  token: String!
  user: AuthUser!
}

type AuthUser {
  email: String!
  event_types: [EventType!]!
  id: Int!
  location: Location
  name: String!
  password: String!
  verified: Boolean!
}

type Event {
  allow_waitlist: Boolean!
  author: User!
  author_id: Int!
  capacity: Int!
  created_at: String!
  description: String
  end_datetime: String!
  event_types: [EventType!]!
  id: Int!
  image_filePath: String
  location: Location!
  location_id: Int!
  name: String!
  participants: [User!]!
  start_datetime: String!
  summary: String!
}

type EventType {
  id: Int!
  name: String!
}

type Location {
  additional_information: String
  city: String!
  country: String!
  id: Int!
  latitude: Float!
  longitude: Float!
  street_name: String!
  street_number: String!
}

type Mutation {
  _empty(nothing: String): String
  requestResetPassword(email: String!): Boolean!
  resetPassword(password: String!, token: String!): Boolean!
  signIn(email: String!, password: String!): AuthInfo!
  signUp(email: String!, name: String!, password: String!): AuthInfo!
  verify(token: String!): String!
}

type Query {
  _empty(nothing: String): String
  eventById(id: Int!): Event
  eventByIds(ids: [Int!]!): [Event!]!
  eventTypeById(id: Int!): EventType
  eventTypes: [EventType]
  eventTypesByIds(ids: [Int!]!): [EventType]
  events(limit: Int, offset: Int): [Event!]!
  interestingNearbyEvents(latitude: Float!, limit: Int, longitude: Float!, offset: Int, userId: Int!): [Event!]!
  locationById(id: Int!): Location
  locations: [Location]
  locationsByIds(ids: [Int!]!): [Location]
  newlyCreatedNearbyEvents(latitude: Float!, limit: Int, longitude: Float!, offset: Int): [Event!]!
  similarEvents(city: String!, eventId: Int!, eventTypeIds: [Int!]!, limit: Int, offset: Int): [Event!]!
  todaysNearbyEvents(latitude: Float!, limit: Int, longitude: Float!, offset: Int): [Event!]!
  userById(id: Int!): User
  users: [User]
  usersByIds(ids: [Int!]!): [User]
}

type User {
  email: String!
  event_types: [EventType!]!
  id: Int!
  location: Location
  name: String!
}
