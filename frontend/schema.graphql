type AuthInfo {
  token: String!
  user: AuthUser!
}

type AuthUser {
  email: String!
  id: Int!
  name: String!
}

type Event {
  allow_waitlist: Boolean!
  author: User!
  author_id: Int!
  capacity: Int!
  description: String
  end_datetime: String!
  event_types: [EventType!]!
  id: Int!
  image_filePath: String
  location: Location!
  location_id: Int!
  name: String!
  participants: [User!]!
  start_datetime: String!
  summary: String!
}

type EventType {
  id: Int!
  name: String!
}

type Location {
  additional_information: String
  city: String!
  country: String!
  id: Int!
  latitude: Float!
  longitude: Float!
  street_name: String!
  street_number: String!
}

type Mutation {
  _empty(nothing: String): String
  signIn(email: String!, password: String!): AuthInfo!
  signUp(email: String!, name: String!, password: String!): AuthInfo!
}

type Query {
  getEventById(id: Int!): Event
  getEventByIds(ids: [Int!]!): [Event]
  getEventTypeById(id: Int!): EventType
  getEventTypes: [EventType]
  getEventTypesByIds(ids: [Int!]!): [EventType]
  getEvents(limit: Int, offset: Int): [Event]
  getLocationById(id: Int!): Location
  getLocations: [Location]
  getLocationsByIds(ids: [Int!]!): [Location]
  getUserById(id: Int!): User
  getUsers: [User]
  getUsersByIds(ids: [Int!]!): [User]
}

type User {
  email: String!
  id: Int!
  name: String!
  password: String!
}
